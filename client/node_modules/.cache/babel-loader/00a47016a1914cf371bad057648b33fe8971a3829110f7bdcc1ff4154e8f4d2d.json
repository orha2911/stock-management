{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Public\\\\.vscode\\\\stocks-management\\\\client\\\\src\\\\StockDetailsPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { getStockInfo, updatePortfolio } from './apiService';\nimport { Button, Input, Typography, Card, Spin, Alert } from 'antd';\nimport portfolioStore from './stores/PortfolioStore';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  Title,\n  Text\n} = Typography;\nconst StockDetailsPage = () => {\n  _s();\n  const {\n    symbol\n  } = useParams();\n  const navigate = useNavigate();\n  const [stock, setStock] = useState(null);\n  const [quantity, setQuantity] = useState(1);\n  //const [portfolio, setPortfolio] = useState([]);\n\n  const [error, setError] = useState('');\n  const username = 'johndoe';\n  useEffect(() => {\n    const fetchStockDetails = async () => {\n      try {\n        const data = await getStockInfo(symbol);\n        setStock(data);\n        setError('');\n      } catch (error) {\n        setError('Error fetching stock details');\n        console.error('Error fetching stock details:', error);\n      }\n    };\n    fetchStockDetails();\n  }, [symbol]);\n  const handleAddToPortfolio = async () => {\n    try {\n      // Update the portfolio locally\n      const updatedPortfolio = portfolioStore.portfolio;\n      const existingStockIndex = updatedPortfolio.findIndex(stock => stock.symbol === symbol);\n      if (existingStockIndex > -1) {\n        // Update quantity if stock already exists\n        updatedPortfolio[existingStockIndex].quantity += Number(quantity);\n      } else {\n        // Add new stock if it doesn't exist\n        updatedPortfolio.push({\n          symbol,\n          quantity: Number(quantity)\n        });\n      }\n\n      // Update the portfolio on the server\n      await updatePortfolio(username, updatedPortfolio);\n\n      // Update local state\n      //setPortfolio(updatedPortfolio);\n\n      // Navigate back to the portfolio page\n      navigate('/');\n    } catch (error) {\n      setError('Error adding stock to portfolio');\n      console.error('Error adding stock to portfolio:', error);\n    }\n  };\n  const handleGoBack = () => {\n    navigate('/'); // Navigate back to the portfolio page\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: '20px',\n      maxWidth: '600px',\n      margin: '0 auto'\n    },\n    children: [error && /*#__PURE__*/_jsxDEV(Alert, {\n      message: error,\n      type: \"error\",\n      showIcon: true,\n      style: {\n        marginBottom: '20px'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 17\n    }, this), stock ? /*#__PURE__*/_jsxDEV(Card, {\n      title: /*#__PURE__*/_jsxDEV(Title, {\n        level: 2,\n        children: [stock.name, \" (\", stock.symbol, \")\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 18\n      }, this),\n      style: {\n        marginBottom: '20px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Text, {\n        children: [\"Price: $\", stock.latestQuote]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 51\n      }, this), /*#__PURE__*/_jsxDEV(Text, {\n        children: [\"Exchange: \", stock.exchange]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 50\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        type: \"number\",\n        value: quantity,\n        onChange: e => setQuantity(e.target.value),\n        min: \"1\",\n        style: {\n          width: '100px',\n          marginTop: '10px'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"primary\",\n        onClick: handleAddToPortfolio,\n        style: {\n          marginTop: '10px',\n          marginRight: '10px'\n        },\n        children: \"Add to Portfolio\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: handleGoBack,\n        style: {\n          marginTop: '10px'\n        },\n        children: \"Go Back to Portfolio\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        textAlign: 'center'\n      },\n      children: /*#__PURE__*/_jsxDEV(Spin, {\n        tip: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n};\n_s(StockDetailsPage, \"W41DG0KSKG9TLWCawHSy7Xew9Hs=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = StockDetailsPage;\nexport default StockDetailsPage;\nvar _c;\n$RefreshReg$(_c, \"StockDetailsPage\");","map":{"version":3,"names":["React","useState","useEffect","useParams","useNavigate","getStockInfo","updatePortfolio","Button","Input","Typography","Card","Spin","Alert","portfolioStore","jsxDEV","_jsxDEV","Title","Text","StockDetailsPage","_s","symbol","navigate","stock","setStock","quantity","setQuantity","error","setError","username","fetchStockDetails","data","console","handleAddToPortfolio","updatedPortfolio","portfolio","existingStockIndex","findIndex","Number","push","handleGoBack","style","padding","maxWidth","margin","children","message","type","showIcon","marginBottom","fileName","_jsxFileName","lineNumber","columnNumber","title","level","name","latestQuote","exchange","value","onChange","e","target","min","width","marginTop","onClick","marginRight","textAlign","tip","_c","$RefreshReg$"],"sources":["C:/Users/Public/.vscode/stocks-management/client/src/StockDetailsPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useParams, useNavigate } from 'react-router-dom'; \r\nimport { getStockInfo, updatePortfolio } from './apiService'; \r\nimport { Button, Input, Typography, Card, Spin, Alert } from 'antd';\r\nimport portfolioStore from './stores/PortfolioStore';\r\n\r\nconst { Title, Text } = Typography;\r\n\r\nconst StockDetailsPage = () => {\r\n  const { symbol } = useParams();\r\n  const navigate = useNavigate();\r\n  const [stock, setStock] = useState(null);\r\n  const [quantity, setQuantity] = useState(1);\r\n  //const [portfolio, setPortfolio] = useState([]);\r\n\r\n  const [error, setError] = useState('');\r\n  const username = 'johndoe'; \r\n\r\n  useEffect(() => {\r\n    const fetchStockDetails = async () => {\r\n      try {\r\n        const data = await getStockInfo(symbol);\r\n        setStock(data);\r\n        setError('');\r\n      } catch (error) {\r\n        setError('Error fetching stock details');\r\n        console.error('Error fetching stock details:', error);\r\n      }\r\n    };\r\n\r\n    fetchStockDetails();\r\n  }, [symbol]);\r\n\r\n  const handleAddToPortfolio = async () => {\r\n    try {  \r\n      // Update the portfolio locally\r\n      const updatedPortfolio = portfolioStore.portfolio;\r\n      const existingStockIndex = updatedPortfolio.findIndex(stock => stock.symbol === symbol);\r\n      if (existingStockIndex > -1) {\r\n        // Update quantity if stock already exists\r\n        updatedPortfolio[existingStockIndex].quantity += Number(quantity);\r\n      } else {\r\n        // Add new stock if it doesn't exist\r\n        updatedPortfolio.push({ symbol, quantity: Number(quantity) });\r\n      }\r\n    \r\n      // Update the portfolio on the server\r\n      await updatePortfolio(username, updatedPortfolio);\r\n  \r\n      // Update local state\r\n      //setPortfolio(updatedPortfolio);\r\n  \r\n      // Navigate back to the portfolio page\r\n      navigate('/');\r\n    } catch (error) {\r\n      setError('Error adding stock to portfolio');\r\n      console.error('Error adding stock to portfolio:', error);\r\n    }\r\n  };\r\n\r\n  const handleGoBack = () => {\r\n    navigate('/'); // Navigate back to the portfolio page\r\n  };\r\n\r\n  return (\r\n    <div style={{ padding: '20px', maxWidth: '600px', margin: '0 auto' }}>\r\n      {error && <Alert message={error} type=\"error\" showIcon style={{ marginBottom: '20px' }} />}\r\n      {stock ? (\r\n        <Card\r\n          title={<Title level={2}>{stock.name} ({stock.symbol})</Title>}\r\n          style={{ marginBottom: '20px' }}\r\n        >\r\n          <Text>Price: ${stock.latestQuote}</Text><br />\r\n          <Text>Exchange: {stock.exchange}</Text><br />\r\n          <Input\r\n            type=\"number\"\r\n            value={quantity}\r\n            onChange={(e) => setQuantity(e.target.value)}\r\n            min=\"1\"\r\n            style={{ width: '100px', marginTop: '10px' }}\r\n          />\r\n          <Button\r\n            type=\"primary\"\r\n            onClick={handleAddToPortfolio}\r\n            style={{ marginTop: '10px', marginRight: '10px' }}\r\n          >\r\n            Add to Portfolio\r\n          </Button>\r\n          <Button\r\n            onClick={handleGoBack}\r\n            style={{ marginTop: '10px' }}\r\n          >\r\n            Go Back to Portfolio\r\n          </Button>\r\n        </Card>\r\n      ) : (\r\n        <div style={{ textAlign: 'center' }}>\r\n          <Spin tip=\"Loading...\" />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StockDetailsPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}