{"ast":null,"code":"// import React, { useState, useEffect } from 'react';\n// import { useParams, useNavigate } from 'react-router-dom'; \n// import { getStockInfo, updatePortfolio } from './apiService'; \n// import { Button, Input, Typography, Card, Spin, Alert } from 'antd';\n// import portfolioStore from './stores/PortfolioStore';\n\n// const { Title, Text } = Typography;\n\n// const StockDetailsPage = () => {\n//   const { symbol } = useParams();\n//   const navigate = useNavigate();\n//   const [stock, setStock] = useState(null);\n//   const [quantity, setQuantity] = useState(1);\n//   const [error, setError] = useState('');\n//   const username = 'johndoe'; \n\n//   useEffect(() => {\n//     const fetchStockDetails = async () => {\n//       try {\n//         const data = await getStockInfo(symbol);\n//         setStock(data);\n//         setError('');\n//       } catch (error) {\n//         setError('Error fetching stock details');\n//         console.error('Error fetching stock details:', error);\n//       }\n//     };\n\n//     fetchStockDetails();\n//   }, [symbol]);\n\n//   const handleAddToPortfolio = async () => {\n//     try {  \n//       // Update the portfolio locally\n//       const updatedPortfolio = portfolioStore.portfolio;\n//       const existingStockIndex = updatedPortfolio.findIndex(stock => stock.symbol === symbol);\n//       if (existingStockIndex > -1) {\n//         // Update quantity if stock already exists\n//         updatedPortfolio[existingStockIndex].quantity += Number(quantity);\n//       } else {\n//         // Add new stock if it doesn't exist\n//         updatedPortfolio.push({ symbol, quantity: Number(quantity) });\n//       }\n\n//       // Update the portfolio on the server\n//       await updatePortfolio(username, updatedPortfolio);\n\n//       // Update local state\n//       //setPortfolio(updatedPortfolio);\n\n//       // Navigate back to the portfolio page\n//       navigate('/');\n//     } catch (error) {\n//       setError('Error adding stock to portfolio');\n//       console.error('Error adding stock to portfolio:', error);\n//     }\n//   };\n\n//   const handleGoBack = () => {\n//     navigate('/'); // Navigate back to the portfolio page\n//   };\n\n//   return (\n//     <div style={{ padding: '20px', maxWidth: '600px', margin: '0 auto' }}>\n//       {error && <Alert message={error} type=\"error\" showIcon style={{ marginBottom: '20px' }} />}\n//       {stock ? (\n//         <Card\n//           title={<Title level={2}>{stock.name} ({stock.symbol})</Title>}\n//           style={{ marginBottom: '20px' }}\n//         >\n//           <Text>Price: ${stock.latestQuote}</Text><br />\n//           <Text>Exchange: {stock.exchange}</Text><br />\n//           <Input\n//             type=\"number\"\n//             value={quantity}\n//             onChange={(e) => setQuantity(e.target.value)}\n//             min=\"1\"\n//             style={{ width: '100px', marginTop: '10px' }}\n//           />\n//           <Button\n//             type=\"primary\"\n//             onClick={handleAddToPortfolio}\n//             style={{ marginTop: '10px', marginRight: '10px' }}\n//           >\n//             Add to Portfolio\n//           </Button>\n//           <Button\n//             onClick={handleGoBack}\n//             style={{ marginTop: '10px' }}\n//           >\n//             Go Back to Portfolio\n//           </Button>\n//         </Card>\n//       ) : (\n//         <div style={{ textAlign: 'center' }}>\n//           <Spin tip=\"Loading...\" />\n//         </div>\n//       )}\n//     </div>\n//   );\n// };\n\n// export default StockDetailsPage;","map":{"version":3,"names":[],"sources":["C:/Users/Public/.vscode/stocks-management/client/src/StockDetailsPage.js"],"sourcesContent":["// import React, { useState, useEffect } from 'react';\r\n// import { useParams, useNavigate } from 'react-router-dom'; \r\n// import { getStockInfo, updatePortfolio } from './apiService'; \r\n// import { Button, Input, Typography, Card, Spin, Alert } from 'antd';\r\n// import portfolioStore from './stores/PortfolioStore';\r\n\r\n// const { Title, Text } = Typography;\r\n\r\n// const StockDetailsPage = () => {\r\n//   const { symbol } = useParams();\r\n//   const navigate = useNavigate();\r\n//   const [stock, setStock] = useState(null);\r\n//   const [quantity, setQuantity] = useState(1);\r\n//   const [error, setError] = useState('');\r\n//   const username = 'johndoe'; \r\n\r\n//   useEffect(() => {\r\n//     const fetchStockDetails = async () => {\r\n//       try {\r\n//         const data = await getStockInfo(symbol);\r\n//         setStock(data);\r\n//         setError('');\r\n//       } catch (error) {\r\n//         setError('Error fetching stock details');\r\n//         console.error('Error fetching stock details:', error);\r\n//       }\r\n//     };\r\n\r\n//     fetchStockDetails();\r\n//   }, [symbol]);\r\n\r\n//   const handleAddToPortfolio = async () => {\r\n//     try {  \r\n//       // Update the portfolio locally\r\n//       const updatedPortfolio = portfolioStore.portfolio;\r\n//       const existingStockIndex = updatedPortfolio.findIndex(stock => stock.symbol === symbol);\r\n//       if (existingStockIndex > -1) {\r\n//         // Update quantity if stock already exists\r\n//         updatedPortfolio[existingStockIndex].quantity += Number(quantity);\r\n//       } else {\r\n//         // Add new stock if it doesn't exist\r\n//         updatedPortfolio.push({ symbol, quantity: Number(quantity) });\r\n//       }\r\n    \r\n//       // Update the portfolio on the server\r\n//       await updatePortfolio(username, updatedPortfolio);\r\n  \r\n//       // Update local state\r\n//       //setPortfolio(updatedPortfolio);\r\n  \r\n//       // Navigate back to the portfolio page\r\n//       navigate('/');\r\n//     } catch (error) {\r\n//       setError('Error adding stock to portfolio');\r\n//       console.error('Error adding stock to portfolio:', error);\r\n//     }\r\n//   };\r\n\r\n//   const handleGoBack = () => {\r\n//     navigate('/'); // Navigate back to the portfolio page\r\n//   };\r\n\r\n//   return (\r\n//     <div style={{ padding: '20px', maxWidth: '600px', margin: '0 auto' }}>\r\n//       {error && <Alert message={error} type=\"error\" showIcon style={{ marginBottom: '20px' }} />}\r\n//       {stock ? (\r\n//         <Card\r\n//           title={<Title level={2}>{stock.name} ({stock.symbol})</Title>}\r\n//           style={{ marginBottom: '20px' }}\r\n//         >\r\n//           <Text>Price: ${stock.latestQuote}</Text><br />\r\n//           <Text>Exchange: {stock.exchange}</Text><br />\r\n//           <Input\r\n//             type=\"number\"\r\n//             value={quantity}\r\n//             onChange={(e) => setQuantity(e.target.value)}\r\n//             min=\"1\"\r\n//             style={{ width: '100px', marginTop: '10px' }}\r\n//           />\r\n//           <Button\r\n//             type=\"primary\"\r\n//             onClick={handleAddToPortfolio}\r\n//             style={{ marginTop: '10px', marginRight: '10px' }}\r\n//           >\r\n//             Add to Portfolio\r\n//           </Button>\r\n//           <Button\r\n//             onClick={handleGoBack}\r\n//             style={{ marginTop: '10px' }}\r\n//           >\r\n//             Go Back to Portfolio\r\n//           </Button>\r\n//         </Card>\r\n//       ) : (\r\n//         <div style={{ textAlign: 'center' }}>\r\n//           <Spin tip=\"Loading...\" />\r\n//         </div>\r\n//       )}\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default StockDetailsPage;\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}